name: Tests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    container:
      image: node:20-bullseye

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: weather_test
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run unit tests
        run: yarn test
        env:
          DATABASE_URL: postgresql://postgres:postgres@postgres:5432/weather_test
          NODE_ENV: test

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    container:
      image: node:20-bullseye

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: weather_service_test
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:latest
        ports:
          - 6380:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup database
        run: yarn prisma migrate deploy
        env:
          DATABASE_URL: postgresql://user:password@postgres:5432/weather_service_test
          NODE_ENV: test

      - name: Run integration tests
        run: yarn test:integration
        env:
          DATABASE_URL_TEST: postgresql://user:password@postgres:5432/weather_service_test
          NODE_ENV: test
          REDIS_HOST: redis
          REDIS_PORT: 6379
          WEATHER_API_KEY_TEST: 1a48b64e96174e409ce123137251705
          SMTP_HOST_TEST: smtp.gmail.com
          SMTP_PORT_TEST: 587
          SMTP_USER_TEST: ${{ secrets.SMTP_USER }}
          SMTP_PASS_TEST: ${{ secrets.SMTP_PASS }}
          APP_URL_TEST: http://localhost:3000
